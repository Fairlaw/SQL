--CRIAR DATABASE aula

CREATE DATABASE aula

--USE aula

USE aula

--CRIAR TABELA ALUNOS

create table aluno(

    aluno_nome varchar(150),
    aluno_cod int not null AUTO_INCREMENT PRIMARY KEY,
    sexo ENUM ('M','F'),
    mensalidade float (6,2),
    ano int 
);

--INSERIR VALOR NA TABELA ALUNOS

INSERT INTO aluno (aluno_nome,sexo,mensalidade,ano)VALUES ('Bruno','M',800,3),('Bruna','F',400,3),('Bianca','F',1200,1),('David','M',500,3),('Wilton','M',500,3),('Natalia','F',500,2),('Roberta','F',400,1),('Mariana','F',450,1),('Lucas', 'M', 600, 2),('Carla', 'F', 700, 1),('Pedro', 'M', 1000, 1),('Fernanda', 'F', 900, 3),('Rafael', 'M', 750, 2),('Amanda', 'F', 600, 1),('Ricardo', 'M', 1100, 1),('Gabriela', 'F', 800, 3),('Henrique', 'M', 400, 2),('Larissa', 'F', 950, 3),('Paulo', 'M', 550, 3),('Isabela', 'F', 700, 3)

--MAIS VALORES

INSERT INTO aluno (aluno_nome,sexo,mensalidade,ano)VALUES
('Fernando', 'M', 850, 2),
('Camila', 'F', 550, 1),
('Gabriel', 'M', 1200, 2),
('Juliana', 'F', 400, 3),
('Thiago', 'M', 700, 1),
('Aline', 'F', 600, 2),
('Rafaela', 'F', 900, 3),
('Ricardo', 'M', 1000, 1),
('Isabella', 'F', 800, 2),
('Gustavo', 'M', 750, 1),
('Carolina', 'F', 650, 2),
('Marcelo', 'M', 1100, 3),
('Vanessa', 'F', 500, 1),
('Guilherme', 'M', 900, 2),
('Patricia', 'F', 550, 3),
('Diego', 'M', 700, 1),
('Tatiana', 'F', 950, 2),
('Renato', 'M', 500, 1),
('Letícia', 'F', 750, 3),
('Rodrigo', 'M', 800, 2),
('Luisa', 'F', 450, 1),
('André', 'M', 600, 3),
('Jéssica', 'F', 700, 2),
('Vinicius', 'M', 950, 1),
('Mariana', 'F', 800, 3),
('Pedro', 'M', 550, 1),
('Amanda', 'F', 650, 2),
('Rafael', 'M', 900, 3),
('Bianca', 'F', 1000, 1),
('Lucas', 'M', 750, 2)

--MAIS AINDA

INSERT INTO aluno (aluno_nome,sexo,mensalidade,ano)VALUES ('Leonardo', 'M', 800, 2),
('Luana', 'F', 600, 1),
('Henrique', 'M', 1100, 2),
('Alessandra', 'F', 400, 3),
('Matheus', 'M', 700, 1),
('Vitória', 'F', 550, 2),
('Rodrigo', 'M', 900, 3),
('Larissa', 'F', 1000, 1),
('Rafael', 'M', 850, 2),
('Carolina', 'F', 750, 1),
('Guilherme', 'M', 650, 2),
('Juliana', 'F', 1200, 3),
('Fábio', 'M', 500, 1),
('Beatriz', 'F', 800, 2),
('Gustavo', 'M', 550, 3),
('Camila', 'F', 700, 1),
('Renato', 'M', 950, 2),
('Fernanda', 'F', 500, 1),
('Ricardo', 'M', 750, 3),
('Isabela', 'F', 900, 1),
('Thiago', 'M', 600, 2),
('Leticia', 'F', 450, 3),
('Alexandre', 'M', 850, 1),
('Mariana', 'F', 700, 2),
('Lucas', 'M', 950, 3),
('Natália', 'F', 800, 1),
('Daniel', 'M', 550, 2),
('Patrícia', 'F', 750, 3),
('Pedro', 'M', 1000, 1),
('Amanda', 'F', 650, 2),
('Vinicius', 'M', 900, 3),
('Laura', 'F', 500, 1),
('Rafael', 'M', 750, 2),
('Bianca', 'F', 1100, 3),
('André', 'M', 550, 1),
('Mariana', 'F', 800, 2),
('Gabriel', 'M', 600, 1),
('Camila', 'F', 950, 3),
('Luiz', 'M', 700, 2),
('Isabela', 'F', 850, 1),
('Felipe', 'M', 450, 2),
('Ana', 'F', 750, 3),
('Gustavo', 'M', 1000, 1),
('Larissa', 'F', 650, 2),
('Ricardo', 'M', 900, 3),
('Aline', 'F', 500, 1),
('Marcos', 'M', 800, 2),
('Carolina', 'F', 550, 3),
('Gabriela', 'M', 750, 1),
('Lucas', 'F', 1100, 2)

--USO DO SELECT

SELECT * FROM aluno
--mostra tudo sobre a tabela

SELECT aluno_nome FROM aluno
--mostra apenas os nomes na tabela aluno

SELECT aluno_cod,aluno_nome FROM aluno
--mostra o código do aluno e nome do mesmo 

SELECT aluno_nome FROM aluno WHERE aluno_cod = 1
--mostra o nome do aluno com código = 1

SELECT aluno_nome,aluno_cod from aluno ORDER by aluno_cod
--mostra nome do aluno e código de acordo com a ordem do código da PK

SELECT aluno_nome from aluno ORDER by aluno_nome;
--mostra nome do aluno e código de acordo com a ordem alfabética 

SELECT aluno_nome from aluno ORDER by aluno_nome DESC;
--mostra nome do aluno e código de acordo com a ordem alfabética decrente

SELECT aluno_nome from aluno ORDER by aluno_nome ASC;
--mostra nome do aluno e código de acordo com a ordem alfabética crecente

SELECT aluno_nome,aluno_cod from aluno ORDER by aluno_nome DESC, aluno_cod ASC;
--mostra o nome decrecente e o código crecente

SELECT * FROM aluno WHERE aluno_cod BETWEEN 2 and 8;
--mostra o nome e id do 2 ao 8 

SELECT aluno_nome,aluno_cod FROM aluno WHERE aluno_cod IN (2,10);
--mostra apenas o nome e cod 2 e 10

SELECT aluno_nome,aluno_cod FROM aluno WHERE aluno_cod > 1 and ano < 4;
--mostra nome do aluno e codigo maior que 1 e ano menor que 4

SELECT aluno_nome,aluno_cod FROM aluno WHERE aluno_cod > 1 or ano < 4;

SELECT * FROM aluno WHERE sexo = 'M'
--mostra todas as informações dos homens da tabela aluno

SELECT * FROM aluno WHERE sexo = 'M' ORDER by aluno_nome;
--mostra todos os homens em ordem alfabetica

SELECT aluno_cod,aluno_nome FROM aluno WHERE sexo = 'F' ;
--mostra o código e o nome das alunas da tabela aluno

SELECT aluno_nome,aluno_cod,mensalidade FROM aluno WHERE mensalidade <= 400;
--mostra o nome, código e mensalidade dos anos que tem a mensalidade menor ou igual a 400

SELECT * FROM aluno WHERE aluno_nome like 'B%'
--mostra todos os nomes na tabela que começam com B

SELECT * FROM aluno WHERE aluno_nome like '%a';
--mostra todos os nomes que terminam com A

SELECT * FROM aluno WHERE aluno_nome like '%a%';
--mostra os nomes que possuem a letra A em alguma parte do nome 

SELECT COUNT(*) FROM aluno WHERE ano = 2; 
--mostra quantos registros da tabela tem o ano igual a 2

select min(mensalidade) as Mensalidade from aluno;
-- seleciona o menor valor na tabela e exibe sob o titulo Mensalidade

select max(mensalidade) as Mensalidade from aluno;
-- seleciona o maior valor na tabela e exibe sob o titulo Mensalidade

select count(*) as Total from aluno;
select count(*) as Total from aluno where mensalidade<500
-- mostra o numero de registros
-- mostra o total de registros =,> ou < que o valor digitado

select count(*) as 'número de pessoas com sexo feminino' from aluno where sexo = 'F'
-- mostra o total de pessoas por sexo

select avg(mensalidade) as MÉDIA from aluno
select avg(mensalidade) as MÉDIA from aluno where mensalidade>500
-- mostra a média de valores

select sum(mensalidade) as soma from aluno
-- seleciona e soma o total de valores

create index idx on aluno(aluno_nome)
create index alunoCod on aluno(aluno_cod)
show index from aluno

delete from aluno where aluno_cod = 1

UPDATE aluno SET mensalidade = 500 WHERE aluno_cod = 2
update aluno set mensalidade = 3000 where aluno_cod = 4
update aluno set mensalidade = 2000 where aluno_cod >= 75